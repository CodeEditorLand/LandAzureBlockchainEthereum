{
  "name": "azure-blockchain",
  "displayName": "Azure Blockchain Development Kit for Ethereum",
  "description": "Develop, deploy debug and manage your Azure Blockchain Service solution",
  "publisher": "AzBlockchain",
  "preview": true,
  "icon": "images/blockchain-service-logo.png",
  "version": "0.1.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-azure-blockchain-ethereum"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-azure-blockchain-ethereum/issues"
  },
  "homepage": "https://github.com/Microsoft/vscode-azure-blockchain-ethereum/blob/master/README.md",
  "license": "MIT",
  "engines": {
    "vscode": "^1.32.0"
  },
  "keywords": [
    "azure",
    "blockchain",
    "ethereum",
    "snippet"
  ],
  "categories": [
    "Azure",
    "Extension Packs",
    "Programming Languages"
  ],
  "aikey": "INSERTAIKEY",
  "main": "./out/extension.js",
  "activationEvents": [
    "onView:AzureBlockchain",
    "onCommand:azureBlockchainService.showWelcomePage",
    "onCommand:azureBlockchainService.refresh",
    "onCommand:contract.copyByteCode",
    "onCommand:contract.copyABI",
    "onCommand:truffle.createLocalUI",
    "onCommand:truffle.newSolidityProject",
    "onCommand:truffle.buildContracts",
    "onCommand:truffle.deployContracts",
    "onCommand:azureBlockchainService.pushLedgerEvents",
    "onCommand:azureBlockchainService.pushCurrentLedgerEvents",
    "onCommand:azureBlockchainService.generateReportPublishingWorkflows",
    "onCommand:azureBlockchainService.generateMicroservicesWorkflows",
    "onCommand:azureBlockchainService.generateEventPublishingWorkflows",
    "onCommand:azureBlockchainService.generateDataPublishingWorkflows",
    "onCommand:remix.viewGasEstimates",
    "onCommand:azureBlockchainService.connectConsortium",
    "onCommand:drizzle.generateSmartContractUI",
    "onCommand:azureBlockchainService.copyRPCEndpointAddress",
    "onCommand:azureBlockchainService.copyAccessKey",
    "onCommand:azureBlockchainService.createConsortium",
    "onCommand:azureBlockchainService.disconnectConsortium"
  ],
  "contributes": {
    "commands": [
      {
        "command": "azureBlockchainService.required.installNpm",
        "title": "Install npm",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.required.installTruffle",
        "title": "Install Truffle",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.required.installGanache",
        "title": "Install Ganache CLI",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.required.getAllVersions",
        "title": "Check required apps",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.generateMicroservicesWorkflows",
        "title": "Generate Microservices for Smart Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.generateDataPublishingWorkflows",
        "title": "Generate Data Publishing Workflows for Smart Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.generateReportPublishingWorkflows",
        "title": "Generate Report Publishing Workflows for Smart Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.generateEventPublishingWorkflows",
        "title": "Generate Event Publishing Workflows for Smart Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.showWelcomePage",
        "title": "Show Welcome Page",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.refresh",
        "title": "Refresh",
        "category": "Azure Blockchain",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "contract.copyByteCode",
        "title": "Copy Contract Bytecode",
        "category": "Azure Blockchain"
      },
      {
        "command": "contract.copyABI",
        "title": "Copy Contract ABI",
        "category": "Azure Blockchain"
      },
      {
        "command": "truffle.newSolidityProject",
        "title": "New Solidity Project",
        "category": "Azure Blockchain"
      },
      {
        "command": "truffle.buildContracts",
        "title": "Build Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "truffle.deployContracts",
        "title": "Deploy Contracts",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.pushLedgerEvents",
        "title": "Push Ledger Events",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.pushCurrentLedgerEvents",
        "title": "Push Current Ledger Events",
        "category": "Azure Blockchain"
      },
      {
        "command": "remix.viewGasEstimates",
        "title": "View Gas Estimates with Remix",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.connectConsortium",
        "title": "Connect to Consortium",
        "category": "Azure Blockchain"
      },
      {
        "command": "drizzle.generateSmartContractUI",
        "title": "Generate Smart Contract UI",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.copyRPCEndpointAddress",
        "title": "Copy RPC Endpoint Address",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.copyAccessKey",
        "title": "Copy Access Key",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.createConsortium",
        "title": "Create Azure Blockchain Service",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.disconnectConsortium",
        "title": "Disconnect Consortium",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.startGanacheServer",
        "title": "Start Ganache Server",
        "category": "Azure Blockchain"
      },
      {
        "command": "azureBlockchainService.stopGanacheServer",
        "title": "Stop Ganache Server",
        "category": "Azure Blockchain"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "when": "false",
          "command": "drizzle.generateSmartContractUI"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.required.installNpm"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.required.installTruffle"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.required.installGanache"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.required.getAllVersions"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.pushLedgerEvents"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.pushCurrentLedgerEvents"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.pushCurrentLedgerEvents"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.refresh"
        },
        {
          "when": "false",
          "command": "remix.viewGasEstimates"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.copyRPCEndpointAddress"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.copyAccessKey"
        },
        {
          "when": "false",
          "command": "azureBlockchainService.disconnectConsortium"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateMicroservicesWorkflows"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateDataPublishingWorkflows"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateEventPublishingWorkflows"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateReportPublishingWorkflows"
        },
        {
          "when": "false",
          "command": "contract.copyByteCode"
        },
        {
          "when": "false",
          "command": "contract.copyABI"
        },
        {
          "when": "azureBlockchainService:isWorkspaceOpen",
          "command": "truffle.buildContracts"
        },
        {
          "when": "azureBlockchainService:isWorkspaceOpen",
          "command": "truffle.deployContracts"
        },
        {
          "when": "azureBlockchainService:isWorkspaceOpen && false",
          "command": "drizzle.generateSmartContractUI"
        }
      ],
      "view/title": [
        {
          "command": "azureBlockchainService.showWelcomePage",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "azureBlockchainService.createConsortium",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "azureBlockchainService.connectConsortium",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "azureBlockchainService.refresh",
          "when": "view == AzureBlockchain",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "azureBlockchainService.copyRPCEndpointAddress",
          "when": "view == AzureBlockchain && viewItem == consortium",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "azureBlockchainService.copyAccessKey",
          "when": "view == AzureBlockchain && viewItem == consortium",
          "group": "azureBlockchain-0@1"
        },
        {
          "command": "azureBlockchainService.startGanacheServer",
          "when": "view == AzureBlockchain && viewItem == localconsortium && azureBlockchainService:isGanacheRunning == false",
          "group": "azureBlockchain-1@0"
        },
        {
          "command": "azureBlockchainService.stopGanacheServer",
          "when": "view == AzureBlockchain && viewItem == localconsortium && azureBlockchainService:isGanacheRunning == true",
          "group": "azureBlockchain-1@0"
        },
        {
          "command": "azureBlockchainService.disconnectConsortium",
          "when": "view == AzureBlockchain && viewItem == consortium",
          "group": "azureBlockchain-1@1"
        },
        {
          "command": "azureBlockchainService.copyRPCEndpointAddress",
          "when": "view == AzureBlockchain && viewItem == localconsortium",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "azureBlockchainService.disconnectConsortium",
          "when": "view == AzureBlockchain && viewItem == localconsortium",
          "group": "azureBlockchain-1@1"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == solidity",
          "command": "truffle.buildContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json && false",
          "command": "drizzle.generateSmartContractUI",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "truffle.deployContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "truffle.deployContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "contract.copyByteCode",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "contract.copyABI",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateMicroservicesWorkflows",
          "group": "9_generationGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateDataPublishingWorkflows",
          "group": "9_generationGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateEventPublishingWorkflows",
          "group": "9_generationGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "azureBlockchainService.generateReportPublishingWorkflows",
          "group": "9_generationGroup"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "AzureBlockchain",
          "name": "Azure Blockchain"
        }
      ]
    }
  },
  "scripts": {
    "package": "npx vsce package",
    "publish": "npx vsce publish",
    "vscode:prepublish": "npm run webpack-prod",
    "compile": "tsc -p ./",
    "webpack-prod": "webpack --mode production",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "tslint": "tslint -t verbose src/**/*.ts test/**/*.ts --exclude src/**/*.d.ts",
    "version": "tsc -v",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/astring": "^1.3.0",
    "@types/estree": "^0.0.39",
    "@types/fs-extra": "^5.0.5",
    "@types/mocha": "^5.2.6",
    "@types/node": "^10.12.21",
    "@types/semver": "^6.0.0",
    "@types/uuid": "^3.4.4",
    "copy-webpack-plugin": "^5.0.3",
    "ts-loader": "^5.4.3",
    "tslint": "^5.12.1",
    "tslint-microsoft-contrib": "^6.1.1",
    "typescript": "^3.3.1",
    "vscode": "^1.1.33",
    "webpack": "^4.30.0",
    "webpack-cli": "^3.3.1"
  },
  "dependencies": {
    "acorn": "^6.1.1",
    "acorn-walk": "^6.1.1",
    "astring": "^1.4.0",
    "azure-arm-resource": "^7.3.0",
    "bip39": "^3.0.1",
    "fs-extra": "^7.0.1",
    "ms-rest": "^2.5.0",
    "ms-rest-azure": "^2.6.0",
    "semver": "^6.0.0",
    "uuid": "^3.3.2",
    "vscode-azureextensionui": "^0.20.5",
    "vscode-extension-telemetry": "^0.1.1"
  },
  "extensionDependencies": [
    "JuanBlanco.solidity",
    "ms-vscode.azure-account"
  ]
}
